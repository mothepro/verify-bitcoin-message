name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies, build and test
        run: bun install

      - name: Create preview directory
        run: |
          mkdir -p preview/pr-${{ github.event.number }}
          cp -r static/* preview/pr-${{ github.event.number }}/

      - name: Deploy to GitHub Pages (Preview)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./preview
          destination_dir: preview
          keep_files: true

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/preview/pr-${prNumber}/`;

            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🚀 Preview deployment')
            );

            const commentBody = `🚀 **Preview deployment ready!**

            ✅ Preview URL: ${previewUrl}
            📝 Commit: ${context.sha.substring(0, 7)}
            🔄 Updated: ${new Date().toISOString()}

            ---
            *This preview will be updated automatically when you push new commits to this PR.*`;

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove preview directory
        run: |
          if [ -d "preview/pr-${{ github.event.number }}" ]; then
            rm -rf preview/pr-${{ github.event.number }}
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "Remove preview for PR #${{ github.event.number }}" || exit 0
            git push
          fi

      - name: Comment PR cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;

            // Find existing preview comment and update it
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🚀 Preview deployment')
            );

            if (botComment) {
              const cleanupBody = `🚀 **Preview deployment**

              ❌ Preview has been cleaned up (PR closed)
              📝 Final commit: ${context.sha.substring(0, 7)}
              🗑️ Cleaned up: ${new Date().toISOString()}`;

              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: cleanupBody
              });
            }
